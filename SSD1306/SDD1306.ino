#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
 
// Definir constantes
#define ANCHO_PANTALLA 128 // ancho pantalla OLED
#define ALTO_PANTALLA 64 // alto pantalla OLED

// Objeto de la clase Adafruit_SSD1306
Adafruit_SSD1306 display(ANCHO_PANTALLA, ALTO_PANTALLA, &Wire, -1);

const unsigned char dibujo [512] PROGMEM = {
	// Genera el codigo en: https://mischianti.org/images-to-byte-array-online-converter-cpp-arduino/
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf9, 0xcf, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc2, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xec, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe8, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc5, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x82, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x05, 0x11, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x88, 0xa1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x50, 0x41, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x20, 0xa2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xd1, 0x14, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfd, 0x8a, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x04, 0x14, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x0a, 0x22, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x91, 0x41, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0xe0, 0x82, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xe1, 0x44, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xb6, 0x29, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0c, 0x19, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x1c, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb2, 0x47, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe1, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

void setup() {
  Serial.begin(9600);
  delay(100);
  Serial.println("Iniciando pantalla OLED");


  // Iniciar pantalla OLED en la direcci√≥n 0x3C
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println("No se encuentra la pantalla OLED");
    while (true);
  }

  // Limpia la pantalla
  display.clearDisplay();
  
  // Muestra el dibujo
  display.drawBitmap(32, 0, dibujo, 64, 64, WHITE);
  display.display();
}

void loop() {}
